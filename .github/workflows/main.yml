name: Main workflow
on:
  push:
    branches:
      - main
jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    #### Добавьте шаг с Flyway-миграциями
    - name: Install Flyway
      uses: red-gate/setup-flyway@v1
    
    # Проверяем, что Postgres работает и доступен перед выполнением миграций, чтобы избежать ошибок подключения
    - name: Wait for Postgres
      run: until pg_isready -h ${{ secrets.DB_HOST }} -p ${{ secrets.DB_PORT }}; do sleep 1; done

    # Выполняем миграции с помощью Flyway, используя URL подключения и учётные данные для базы данных
    - name: Run Flyway migrations
      env:
        FLYWAY_URL: "jdbc:postgresql://${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}"
        FLYWAY_USER: ${{ secrets.DB_USER }}
        FLYWAY_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: flyway migrate -locations=filesystem:migrations
      
    # https://github.com/marketplace/actions/flyway-migration
#      uses: joshuaavalon/flyway-action@v3.0.0
#      with:
#        url: jdbc:postgresql://${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
#        locations: filesystem:migrations
#        user: ${{ secrets.DB_USER }}
#        password: ${{ secrets.DB_PASSWORD }}

    ### Этот шаг оставьте без изменений
    - name: Download and setup autotests binaries
      run: |
        wget -qO- cloud-services-engineer.gitlab.yandexcloud.net/practicum-cloud-services/dbops-autotests/-/package_files/1/download > dbopstest
        chmod +x ./dbopstest
        mv ./dbopstest /usr/local/bin/dbopstest

    ### Этот шаг оставьте без изменений
    - name: Test
      run: |
        dbopstest \
          -test.v \
          -host=${{ secrets.DB_HOST }} \
          -port=${{ secrets.DB_PORT }} \
          -user=${{ secrets.DB_USER }} \
          -password=${{ secrets.DB_PASSWORD }} \
          -db=${{ secrets.DB_NAME }}
